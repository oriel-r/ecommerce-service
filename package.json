{
  "name": "ecommerce-service",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build && npm run copy-templates",
    "copy-templates":  "cpx \"src/modules/_support/notifications/providers/mail/templates/**/*\" \"dist/modules/_support/notifications/providers/mail/templates\"",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node ./node_modules/typeorm/cli.js",
    "migration:generate": "npm run typeorm -- migration:generate ./src/database/migrations/$npm_config_name -d ./src/database/data-source.ts",
    "migration:create": "npm run typeorm -- migration:create ./src/database/migrations -d ./src/database/data-source.ts",
    "migration:run": "npm run typeorm -- migration:run -d ./src/database/data-source.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d ./src/database/data-source.ts",
    "migration:show": "npm run typeorm -- migration:show -d ./src/database/data-source.ts"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/typeorm": "^11.0.0",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^17.0.1",
    "mercadopago": "^2.8.0",
    "nestjs-pino": "^4.4.0",
    "nodemailer": "^7.0.5",
    "pg": "^8.16.3",
    "pino-http": "^10.5.0",
    "pino-pretty": "^13.0.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.25",
    "ua-parser-js": "^2.0.4"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/babel__core": "^7.20.5",
    "@types/babel__generator": "^7.27.0",
    "@types/babel__template": "^7.4.4",
    "@types/babel__traverse": "^7.20.7",
    "@types/bcrypt": "^5.0.2",
    "@types/cookiejar": "^2.1.5",
    "@types/eslint": "^9.6.1",
    "@types/eslint-scope": "^8.3.1",
    "@types/estree": "^1.0.8",
    "@types/express": "^5.0.0",
    "@types/graceful-fs": "^4.1.9",
    "@types/http-cache-semantics": "^4.0.4",
    "@types/istanbul-lib-coverage": "^2.0.6",
    "@types/istanbul-lib-report": "^3.0.3",
    "@types/istanbul-reports": "^3.0.4",
    "@types/jest": "^29.5.14",
    "@types/json-schema": "^7.0.15",
    "@types/methods": "^1.1.4",
    "@types/node": "^22.10.7",
    "@types/nodemailer": "^6.4.17",
    "@types/stack-utils": "^2.0.3",
    "@types/superagent": "^8.1.9",
    "@types/supertest": "^6.0.3",
    "@types/ua-parser-js": "^0.7.39",
    "@types/yargs": "^17.0.33",
    "@types/yargs-parser": "^21.0.3",
    "cpx": "^1.5.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^15.14.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
